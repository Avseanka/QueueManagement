/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package My_Package;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Doru
 */
public class GUI extends javax.swing.JFrame {    
    /**
     * Creates new form GUI
     */
    
    Stats st;
    Queue_Mgr qm;       
    Client_Generator cg;
    Time t;
    Timer t1;
    int simProgress=0;
    public GUI() {
       initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simulationProcess = new javax.swing.JFrame();
        startBut = new javax.swing.JButton();
        stopBut = new javax.swing.JButton();
        addBut = new javax.swing.JButton();
        Progress = new javax.swing.JProgressBar();
        textArea = new javax.swing.JLabel();
        avg = new javax.swing.JFrame();
        avgW = new javax.swing.JTextField();
        avgS = new javax.swing.JTextField();
        avgE = new javax.swing.JTextField();
        ph = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nrClienti = new javax.swing.JTextField();
        nrCozi = new javax.swing.JTextField();
        simulationTime = new javax.swing.JTextField();
        intMinGen = new javax.swing.JTextField();
        intMaxGen = new javax.swing.JTextField();
        okBut = new javax.swing.JButton();
        intMinServ = new javax.swing.JTextField();
        intMaxServ = new javax.swing.JTextField();

        simulationProcess.setBackground(new java.awt.Color(204, 204, 255));

        startBut.setText("Start");
        startBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButActionPerformed(evt);
            }
        });

        stopBut.setText("Stop");
        stopBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButActionPerformed(evt);
            }
        });

        addBut.setText("add Queue");
        addBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButActionPerformed(evt);
            }
        });

        textArea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        textArea.setToolTipText("");

        javax.swing.GroupLayout simulationProcessLayout = new javax.swing.GroupLayout(simulationProcess.getContentPane());
        simulationProcess.getContentPane().setLayout(simulationProcessLayout);
        simulationProcessLayout.setHorizontalGroup(
            simulationProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulationProcessLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(simulationProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(simulationProcessLayout.createSequentialGroup()
                        .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(simulationProcessLayout.createSequentialGroup()
                        .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(simulationProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startBut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stopBut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        simulationProcessLayout.setVerticalGroup(
            simulationProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulationProcessLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(simulationProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(simulationProcessLayout.createSequentialGroup()
                        .addComponent(startBut)
                        .addGap(18, 18, 18)
                        .addComponent(addBut)
                        .addGap(18, 18, 18)
                        .addComponent(stopBut))
                    .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        avgW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgWActionPerformed(evt);
            }
        });

        jLabel2.setText("AVG Waiting Time");

        jLabel3.setText("AVG Service Time");

        jLabel4.setText("AVG Empty Time");

        jLabel5.setText("Peak Hour");

        jButton1.setText("Show Log File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout avgLayout = new javax.swing.GroupLayout(avg.getContentPane());
        avg.getContentPane().setLayout(avgLayout);
        avgLayout.setHorizontalGroup(
            avgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(avgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(avgE, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(avgLayout.createSequentialGroup()
                        .addGroup(avgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avgW, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avgS, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(42, 42, 42)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        avgLayout.setVerticalGroup(
            avgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(avgLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(avgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(avgLayout.createSequentialGroup()
                        .addComponent(avgW, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(avgS, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addComponent(avgE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        nrClienti.setText("Numar initial clienti");
        nrClienti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrClientiActionPerformed(evt);
            }
        });
        nrClienti.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nrClientiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nrClientiFocusLost(evt);
            }
        });

        nrCozi.setText("Numar initial cozi");
        nrCozi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrCoziActionPerformed(evt);
            }
        });
        nrCozi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nrCoziFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nrCoziFocusLost(evt);
            }
        });

        simulationTime.setText("Timp de simulare");
        simulationTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                simulationTimeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                simulationTimeFocusLost(evt);
            }
        });

        intMinGen.setText("Interval min generare");
        intMinGen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                intMinGenFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                intMinGenFocusLost(evt);
            }
        });

        intMaxGen.setText("Interval max generare");
        intMaxGen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                intMaxGenFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                intMaxGenFocusLost(evt);
            }
        });

        okBut.setText("OK!");
        okBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButActionPerformed(evt);
            }
        });

        intMinServ.setText("Interval min deservire");
        intMinServ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                intMinServFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                intMinServFocusLost(evt);
            }
        });

        intMaxServ.setText("Interval max deservire");
        intMaxServ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                intMaxServFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                intMaxServFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nrCozi)
                            .addComponent(simulationTime, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okBut, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nrClienti, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(intMinGen)
                            .addComponent(intMinServ, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intMaxServ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intMaxGen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nrClienti, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nrCozi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okBut, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(simulationTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intMinServ, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(intMaxServ, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intMinGen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(intMaxGen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void update(){
       t1 = new javax.swing.Timer(1000,new ActionListener(){
        int counter=0; 
           @Override
        public void actionPerformed(ActionEvent e){
            counter++;
            textArea.setText("<html>"+qm.view()+"<html>");
            Progress.setValue(100/simProgress*counter);
            if(t.timerStopped() == true){
                simulationProcess.setVisible(false);
                avgW.setText(""+st.getAvgW());
                                avgE.setText(""+st.getAvgE());
                                                avgS.setText(""+st.getAvgS());
                                                                ph.setText((int)st.getPh()-1+" - "+(int)st.getPh());
                avg.setVisible(true);
                avg.pack();
                t1.stop();
                }
                   }
            }); 
    }
    
    private void nrClientiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrClientiActionPerformed
        
    }//GEN-LAST:event_nrClientiActionPerformed

    private void nrClientiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nrClientiFocusLost
                if(nrClienti.getText().equals("")){
        nrClienti.setText("Numar initial clienti");
        }
    }//GEN-LAST:event_nrClientiFocusLost

    private void nrClientiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nrClientiFocusGained
                if(nrClienti.getText().equals("Numar initial clienti")){
        nrClienti.setText("");
        }
    }//GEN-LAST:event_nrClientiFocusGained

    private void nrCoziFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nrCoziFocusLost

        if(nrCozi.getText().equals("")){
        nrCozi.setText("Numar initial cozi");
        }
    }//GEN-LAST:event_nrCoziFocusLost

    private void nrCoziFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nrCoziFocusGained
        if(nrCozi.getText().equals("Numar initial cozi")){
        nrCozi.setText("");
        }
    }//GEN-LAST:event_nrCoziFocusGained

    private void simulationTimeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_simulationTimeFocusLost
        if(simulationTime.getText().equals("")){
        simulationTime.setText("Timp de simulare");
        }
    }//GEN-LAST:event_simulationTimeFocusLost

    private void simulationTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_simulationTimeFocusGained
         if(simulationTime.getText().equals("Timp de simulare")){
         simulationTime.setText("");
        }
    }//GEN-LAST:event_simulationTimeFocusGained

    private void nrCoziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrCoziActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nrCoziActionPerformed

    private void intMinServFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMinServFocusGained
         if(intMinServ.getText().equals("Interval min deservire")){
         intMinServ.setText("");
        }
    }//GEN-LAST:event_intMinServFocusGained

    private void intMinServFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMinServFocusLost
                if(intMinServ.getText().equals("")){
        intMinServ.setText("Interval min deservire");
        }
    }//GEN-LAST:event_intMinServFocusLost

    private void intMaxServFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMaxServFocusGained
                         if(intMaxServ.getText().equals("Interval max deservire")){
         intMaxServ.setText("");
        }
    }//GEN-LAST:event_intMaxServFocusGained

    private void intMaxServFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMaxServFocusLost
                        if(intMaxServ.getText().equals("")){
        intMaxServ.setText("Interval max deservire");
        }
    }//GEN-LAST:event_intMaxServFocusLost

    private void intMinGenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMinGenFocusGained
         if(intMinGen.getText().equals("Interval min generare")){
         intMinGen.setText("");
         }
        
    }//GEN-LAST:event_intMinGenFocusGained

    private void intMinGenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMinGenFocusLost
                                  
        if(intMinGen.getText().equals("")){
        intMinGen.setText("Interval min generare");
        }
    }//GEN-LAST:event_intMinGenFocusLost

    private void intMaxGenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMaxGenFocusGained
                 if(intMaxGen.getText().equals("Interval max generare")){
         intMaxGen.setText("");
         }
    }//GEN-LAST:event_intMaxGenFocusGained

    private void intMaxGenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_intMaxGenFocusLost
                if(intMaxGen.getText().equals("")){
        intMaxGen.setText("Interval max generare");
        }
    }//GEN-LAST:event_intMaxGenFocusLost

    private void okButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButActionPerformed
         int maxGen = Integer.parseInt(intMaxGen.getText());
         int minGen = Integer.parseInt(intMinGen.getText());
         int maxServ = Integer.parseInt(intMaxServ.getText());
         int minServ = Integer.parseInt(intMinServ.getText());
         int simTime = Integer.parseInt(simulationTime.getText());
         int cozi = Integer.parseInt(nrCozi.getText());
         int clienti = Integer.parseInt(nrClienti.getText());
         simProgress = simTime;
         st = new Stats();
         qm = new Queue_Mgr(cozi,st);       
         cg = new Client_Generator(minGen,maxGen,minServ,maxServ,qm,clienti,st);
         t = new Time(cg,qm,simTime,st);
         update();
         simulationProcess.pack();
         simulationProcess.setVisible(true);
         okBut.setVisible(false);
    }//GEN-LAST:event_okButActionPerformed

    private void addButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButActionPerformed
        qm.addQueue();
        qm.redistribuire();
    }//GEN-LAST:event_addButActionPerformed

    private void stopButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButActionPerformed
        t.stop();
        t1.stop();
    }//GEN-LAST:event_stopButActionPerformed

    private void startButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButActionPerformed
        t.start();
        t1.start();
    }//GEN-LAST:event_startButActionPerformed

    private void avgWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avgWActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Process p = new ProcessBuilder("explorer.exe", "Log.log").start();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
               new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Progress;
    private javax.swing.JButton addBut;
    private javax.swing.JFrame avg;
    private javax.swing.JTextField avgE;
    private javax.swing.JTextField avgS;
    private javax.swing.JTextField avgW;
    private javax.swing.JTextField intMaxGen;
    private javax.swing.JTextField intMaxServ;
    private javax.swing.JTextField intMinGen;
    private javax.swing.JTextField intMinServ;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nrClienti;
    private javax.swing.JTextField nrCozi;
    private javax.swing.JButton okBut;
    private javax.swing.JTextField ph;
    private javax.swing.JFrame simulationProcess;
    private javax.swing.JTextField simulationTime;
    private javax.swing.JButton startBut;
    private javax.swing.JButton stopBut;
    private javax.swing.JLabel textArea;
    // End of variables declaration//GEN-END:variables
}
